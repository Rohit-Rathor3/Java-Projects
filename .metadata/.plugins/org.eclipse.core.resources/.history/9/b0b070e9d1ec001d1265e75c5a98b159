package com.rohit.blog.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import io.swagger.v3.oas.annotations.OpenAPIDefinition;
import io.swagger.v3.oas.annotations.info.Contact;
import io.swagger.v3.oas.annotations.info.Info;
import io.swagger.v3.oas.annotations.info.License;
import io.swagger.v3.oas.annotations.servers.Server;
import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;



@Configuration
@OpenAPIDefinition(
		  info =@Info(
		    title = "Blog  API - by Rohit",
		    version = "${api.version}",
		    contact = @Contact(
		      name = "Baeldung", email = "user-apis@baeldung.com", url = "https://www.baeldung.com"
		    ),
		    license = @License(
		      name = "Apache 2.0", url = "https://www.apache.org/licenses/LICENSE-2.0"
		    ),
		    termsOfService = "${tos.uri}",
		    description = "${api.description}"
		  ),
		  servers = @Server(
		    url = "${api.server.url}",
		    description = "Production"
		  ))
/*
 * @SecurityScheme( name = "Bearer Authentication", type =
 * SecuritySchemeType.HTTP, bearerFormat = "JWT", scheme = "bearer" )
 */
public class SwaggerConfig {
	/*
	 * @Bean public OpenAPI customizeOpenAPI() { final String securitySchemeName =
	 * "bearerAuth"; return new OpenAPI() .addSecurityItem(new SecurityRequirement()
	 * .addList(securitySchemeName)) .components(new Components()
	 * .addSecuritySchemes(securitySchemeName, new SecurityScheme()
	 * .name(securitySchemeName) .type(SecurityScheme.Type.HTTP) .scheme("bearer")
	 * .bearerFormat("JWT"))); }
	 */

	/*
	 * @Bean public Docket api() { return new Docket(DocumentationType.SWAGGER_2)
	 * .select() .apis(RequestHandlerSelectors.any()) .paths(PathSelectors.any())
	 * .build(); }
	 */
	 
}
